#LyX file created by tex2lyx 2.2
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin /media/agwa/DISK E/Class/3rd Year/Computer Project/Report/report/tex/parts/
\textclass report
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
System Analysis and Design
\end_layout

\begin_layout Standard
This chapter describes the study, analysis and design of the system. It highlights the identified requirements and Architectural design of the system.
\end_layout

\begin_layout Section
Overview of the system
\end_layout

\begin_layout Standard
The system designed in this project is aimed at having studentsâ transcripts stored and shared on a blockchain network. The storage of transcripts on a blockchain network ensures more security in addition to their storage as hard copy documents. To emphasize security, the transcripts are first hashed into data of fixed size and then stored on a blockchain. The system uses IPFS (InterPlanetary File System)
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "art15"

\end_inset

 to produce a hash code for a transcript. The resultant hash code is then stored on the Ethereum blockchain.
\begin_inset Newline newline
\end_inset

 In order to simulate the blockchain locally, this system uses Ganache which runs a local instance of the Ethereum blockchain on a user computer. To gain access to the network, the user needs a browser extension known as MetaMask. MetaMask is a bridge that allows users to visit the distributed web through their browsers. It allows one to run Ethereum dApps
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "art15"

\end_inset

 right in one's browser. Addition of each transcript to the blockchain costs a certain amount of ether
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "art16"

\end_inset

, the currency for the Ethereum blockchain. 
\begin_inset Float figure
placement !h
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename tex/images/simple_system.png
	scale 70

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Simple system Architecture
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
System Analysis
\end_layout

\begin_layout Subsection
Data Analysis
\end_layout

\begin_layout Standard
From the data retrieved during the research process, we found that the present system handling studentsâ records is prone to a number of errors and weaknesses.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 The current system handling studentsâ results at Makerere University does not have a limit to the number of times a student can do a course as opposed to the actual policy by the University where a student is meant to sit for exams in a course not more than three times.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 Another discovery from the data received was that the present-day system handling studentsâ results at Makerere University can accept an input of a percentage figure greater than 100%.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 Another important note is that currently, students' transcripts exist only in hard copy and can only be picked and verified at the University.
\end_layout

\begin_layout Subsection
User Requirements
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout
R.1
\end_layout

\end_inset

Allow an administrative assistant enter studentsâ results. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout
R.2
\end_layout

\end_inset

Allow students to access their results without being able to change them. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout
R.3
\end_layout

\end_inset

Provide for students to easily share their results information with employers. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout
R.4
\end_layout

\end_inset

Allow employers to easily verify students' results. 
\end_layout

\begin_layout Subsection
Functional Requirements
\end_layout

\begin_layout Standard
These specify what the system is expected to do and they include the following: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout

\end_layout

\end_inset

Provide verification of a user. 
\end_layout

\begin_layout Enumerate
Ensure that the studentsâ results are not altered. 
\end_layout

\begin_layout Subsection
Non Functional Requirements
\end_layout

\begin_layout Standard
These describe the behavior of the system and they include: 
\end_layout

\begin_layout Itemize
The system must verify any addition to the blockchain. 
\end_layout

\begin_layout Itemize
The system must notify the system administrator incase of any unauthorized transactions. 
\end_layout

\begin_layout Subsection
System Requirements
\end_layout

\begin_layout Standard
The system is built with a foundation on the ethereum network which is a platform that enables building of blockhain based smart contracts. MetaMask is a browser extension required for the system to allow a user access the ethereum blockchain network. All these have to be accessed on a Personal Computer with a browser e.g. google chrome, mozilla firefox among others.
\end_layout

\begin_layout Section
System Design
\end_layout

\begin_layout Standard
This section includes a detailed description of the systemâs architecture, components, modules, interfaces, and data for a system to satisfy the specified requirements. It describes the design and development process of the application using a use case diagram to explain how the actors will interact with the system and data flow diagrams to show how data will move in and out of the system.
\end_layout

\begin_layout Subsection
System Architecture
\end_layout

\begin_layout Standard
The system consists of the following major components: 
\end_layout

\begin_layout Itemize
A blockchain network built on the Ethereum platform. 
\end_layout

\begin_layout Itemize
A PC that is used to access the blockchain network. 
\end_layout

\begin_layout Itemize
A user interface that allows a user to access the services of the system like adding to the chain, viewing results, among others. 
\end_layout

\begin_layout Subsubsection
Class Diagram
\end_layout

\begin_layout Standard
This is a static structure diagram that describes the structure of a system by showing the system's classes for example the student, Academic registrar, among others. It also shows their attributes, operations (or methods), and the relationships among objects.
\end_layout

\begin_layout Standard

\begin_inset Float figure
placement !h
wide false
sideways false
status open


\begin_layout Standard

\begin_inset Graphics 
	filename tex/images/class.jpg
	scale 40

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Class diagram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Use Case Diagram
\end_layout

\begin_layout Standard
This is a high level description of the different types of users of the system and how they interact with it. A use case diagram provides a simplified graphical representation of the systemâs functionalities.
\end_layout

\begin_layout Standard

\begin_inset Float figure
placement !h
wide false
sideways false
status open


\begin_layout Standard

\begin_inset Graphics 
	filename tex/images/Usecase.jpg
	scale 50

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Use Case diagram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Context Diagram
\end_layout

\begin_layout Standard
This gives an overview of the entire system. In this diagram, there is only one process that represent the entire system. The purpose of this diagram is to display the expected inputs and outputs from the system to and from various entities. Shown in the diagram below is how various entities like students interact with the system.
\end_layout

\begin_layout Standard

\begin_inset Float figure
placement !h
wide false
sideways false
status open


\begin_layout Standard

\begin_inset Graphics 
	filename tex/images/context.jpg
	scale 70

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Context diagram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Design Constraints
\end_layout

\begin_layout Standard
Accessing the blockchain network requires reliable internet connectivity.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
One needs to have the MetaMask browser extension installed on their browsers in order to access the blockchain network.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Writing to the blockchain costs gas. Gas in the context of Ethereum is a unit and a measurement for the computing power that is needed to execute certain operations in the Ethereum Virtual Machine (EVM).
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The developers were limited to only ten virtual accounts to simulate actual accounts during development.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Assumptions
\series default

\begin_inset Newline newline
\end_inset

 Some assumptions were made during the design and development of the system which include;
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The end-user is willing to learn and adopt to the technology that may be new to him/her.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Users always have good internet reception.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Users are familiar with common internet browsers and file extensions for these browsers.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Scalability of the system will not negatively affect the applicationâs speed and reliability.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Design Methodology
\end_layout

\begin_layout Standard
We used the Agile software development (ASD) methodology. This methodology involves adaptive planning, evolutionary development, early delivery, and continual improvement. It also encourages rapid and flexible response to change. We focused on keeping code simple and testing often. This helped us to minimize risks such as bugs, cost overruns and the changing requirements.
\end_layout

\begin_layout Subsection
Graphical User Interface (GUI) Design
\end_layout

\begin_layout Standard
This section provides the detailed design of the system and subsystem inputs and outputs relative to the user.
\end_layout

\begin_layout Subsubsection
Inputs
\end_layout

\begin_layout Standard

\series bold
Ethereum network password:
\series default
 the usersâ password is required to create an account on the Ethereum network. If the user is logging in on a different device from a previous one that was used to access the network, theyâll have to enter the seed phrase generated for them by the platform. 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Results:
\series default
 When an administrative assistant logs into the system, he/she can enter the studentsâ results.
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\series bold
Testimonial:
\series default
 before the results are forwarded to the blockchain, a student can access the system and view his/her progressive results.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Transcript:
\series default
 On accessing the platform, a student can view his transcript which can be printed as a pdf. An employer who would like to view an applicantâs past results can also access the network and view the same transcript.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
External Interfaces
\end_layout

\begin_layout Subsubsection
Hardware Interfaces
\end_layout

\begin_layout Standard
To fully access the functionality of this system, a user is required to have Computer with an internet browser(like google chrome, mozilla firefox, among others) with the MetaMask browser extension installed.
\end_layout

\begin_layout Subsubsection
Software Interfaces
\end_layout

\begin_layout Standard
The functionalities of the external interfaces were developed using web-based scripting langauages like PHP, JavaScript and the blockchain network built on the ethereum platform.
\end_layout

\begin_layout Subsubsection
Communication Interfaces
\end_layout

\begin_layout Standard
The student details handled by the system are stored on an online sql database. The fully processed and verified transcript is stored on the blockchain built on the ethereum platform.
\end_layout

\begin_layout Subsubsection
User Interfaces
\end_layout

\begin_layout Standard
Users navigate through the application using a windowed GUI. This involves clicking using a mouse, dragging and dropping among other manoeuvres possible with a windowed GUI.
\end_layout

\end_body
\end_document
